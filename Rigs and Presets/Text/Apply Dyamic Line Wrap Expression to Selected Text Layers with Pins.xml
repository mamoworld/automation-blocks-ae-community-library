<xml xmlns="https://developers.google.com/blockly/xml"><variables><variable id="-@|Pb/jEFU.r4Z^]O0@t">max chars per line</variable><variable id="btr`)#FUCF%)YgT;3.Si">pin layers</variable><variable id=":2vco:~z5#0.,:-((j]A">pin 1</variable><variable id="f*kq7aA(^ot0d+-3=p4W">pin 2</variable><variable id="HsCpLkkl}Qz^w+c7E4%X">currentDistance</variable><variable id="FR_=*$GQ8*6N|bA#h+uj">my layer</variable><variable id="Mc`O;GZcz=DB3GWH:xiq">currentLineLength</variable></variables><block type="mm_multiline_comment_block" id="D+~U6[j9QbE}gtJwAyb4" x="0" y="0"><field name="TEXT">Applies an expression  to the source text&amp;#10;of  a text layer such that it wraps automatically&amp;#10;to fit into  a background box. &amp;#10;The wrapping updates instantly. when the box&amp;#10;size or the text itself change.&amp;#10;&amp;#10;Click Help to see tutorial with more details. </field></block><block type="es_tutorial" id="yEQ3-l9PjylS:P.Pq3S~" x="0" y="296"><field name="WATCH_TUT_LABEL">open web page</field><field name="TITLE">watch tutorial</field><field name="URL">https://youtu.be/Vjyp9xk0imA</field></block><block type="variables_set" id="~v1YQD{$%1oK:CgZ9~PD" x="0" y="474"><field name="VAR" id="-@|Pb/jEFU.r4Z^]O0@t">max chars per line</field><value name="VALUE"><block type="math_number" id="A*9AP2^/7Gr]h[7[IoN?"><field name="NUM">80</field></block></value><next><block type="variables_set" id="V.F}uUtpai=o~li1a+6c"><field name="VAR" id="btr`)#FUCF%)YgT;3.Si">pin layers</field><value name="VALUE"><block type="ae_layer_list" id="TIP/yAq#Ak)y~.p#,Qq)"><field name="SELECTION">SELECTED</field><field name="TYPE">ShapeLayer</field><value name="COMP"><shadow type="ae_active_comp" id="O.fz(}dw47DF9j)M*WKt"></shadow></value></block></value><next><block type="controls_if" id="T*:%6`S?i~EBp^:}vgxA"><value name="IF0"><block type="logic_compare" id="j~.Nf[sgS3hI:DThhJ]Z"><field name="OP">NEQ</field><value name="A"><block type="lists_length" id="Zmqp+KV{vjkKVruvK-JV"><value name="VALUE"><block type="variables_get" id="9pCHDr5mab.n5+TLD+0s"><field name="VAR" id="btr`)#FUCF%)YgT;3.Si">pin layers</field></block></value></block></value><value name="B"><block type="math_number" id="YB5qdi9-{]QA4c^ptcDa"><field name="NUM">2</field></block></value></block></value><statement name="DO0"><block type="block_extendscript_alert" id="vKR@E35%]l;gPZW9XV{!"><field name="TEXT">alert</field><field name="TYPE">ERROR</field><value name="TEXT_TO_ALERT"><shadow type="text" id="ylB9/v_Ax0UDF3~XQR]$"><field name="TEXT">Please select exactly two pin layers from Pins &amp; Boxes and some text layers.</field></shadow></value></block></statement><next><block type="variables_set" id="CQ2w7%tvD.%TwP5H2R$p"><field name="VAR" id=":2vco:~z5#0.,:-((j]A">pin 1</field><value name="VALUE"><block type="lists_getIndex" id="C0((qA,BWE]m:zv6Vw4/"><mutation statement="false" at="true"></mutation><field name="MODE">GET</field><field name="WHERE">FROM_START</field><value name="VALUE"><block type="variables_get" id="bJrLh!{uy},ht=h32bv^"><field name="VAR" id="btr`)#FUCF%)YgT;3.Si">pin layers</field></block></value><value name="AT"><block type="math_number" id="fqJv=K^g$F.F|0Cb$,Fp"><field name="NUM">1</field></block></value></block></value><next><block type="variables_set" id="yMr3=J0i#?X5^|)Ggwts"><field name="VAR" id="f*kq7aA(^ot0d+-3=p4W">pin 2</field><value name="VALUE"><block type="lists_getIndex" id="8;}O)7.90N}|5Fm#o@:6"><mutation statement="false" at="true"></mutation><field name="MODE">GET</field><field name="WHERE">FROM_START</field><value name="VALUE"><block type="variables_get" id="S}yq*/sinP?uMk{0`8%c"><field name="VAR" id="btr`)#FUCF%)YgT;3.Si">pin layers</field></block></value><value name="AT"><block type="math_number" id="NY_ylDVkd)_QlN:3#:{u"><field name="NUM">2</field></block></value></block></value><next><block type="variables_set" id="D3/G{mG}sRTC1_`3rvi6"><field name="VAR" id="HsCpLkkl}Qz^w+c7E4%X">currentDistance</field><value name="VALUE"><block type="math_arithmetic" id="GzPsk+;4_v,3I4RKyF.v"><field name="OP">MINUS</field><value name="A"><shadow type="math_number" id="p@Un71=KLj3Mn?o/LMK#"><field name="NUM">1</field></shadow><block type="lists_getIndex" id="E52[`^nt(%%bmBM_aqej"><mutation statement="false" at="true"></mutation><field name="MODE">GET</field><field name="WHERE">FROM_START</field><value name="VALUE"><block type="ae_property_get_attribute" id="RK^X,}d%Pt.sY~jN6$i1"><field name="PARAM">VALUE</field><value name="ITEM"><block type="ae_property_path" id="!lRnC8{/16X#VNh;QSB-"><mutation fullPath="Comp 1::$2/ADBE Transform Group/ADBE Position" base="BASE_LAYER"></mutation><field name="PROPERTY_PATH">ADBE Transform Group/ADBE Position</field><field name="BASE_DROPDOWN">BASE_LAYER</field><value name="INP_LAYER"><shadow type="text" id="Hu02g9{d`5`E%5UuTOUf"><field name="TEXT">Comp 1::$2</field></shadow><block type="variables_get" id="!c]lsbmiC:e-32fW!$gF"><field name="VAR" id=":2vco:~z5#0.,:-((j]A">pin 1</field></block></value></block></value></block></value><value name="AT"><block type="math_number" id="BhJ`mnVsQ4)9,u~2THV1"><field name="NUM">1</field></block></value></block></value><value name="B"><shadow type="math_number" id="1t=Ed;=KIq$%opcue/RS"><field name="NUM">1</field></shadow><block type="lists_getIndex" id="Dy8$#s*z=-s|FI8@==+)"><mutation statement="false" at="true"></mutation><field name="MODE">GET</field><field name="WHERE">FROM_START</field><value name="VALUE"><block type="ae_property_get_attribute" id="*vx|:=)v8J8uITWKa;sJ"><field name="PARAM">VALUE</field><value name="ITEM"><block type="ae_property_path" id="o6.oQ.Beh;tVC63vBi#Y"><mutation fullPath="Comp 1::$2/ADBE Transform Group/ADBE Position" base="BASE_LAYER"></mutation><field name="PROPERTY_PATH">ADBE Transform Group/ADBE Position</field><field name="BASE_DROPDOWN">BASE_LAYER</field><value name="INP_LAYER"><shadow type="text"><field name="TEXT">Comp 1::$2</field></shadow><block type="variables_get" id="%~Hrt.c?$-!FLk7(-OJ6"><field name="VAR" id="f*kq7aA(^ot0d+-3=p4W">pin 2</field></block></value></block></value></block></value><value name="AT"><block type="math_number" id="cvwR2m~P`Qhxk(iH}1TX"><field name="NUM">1</field></block></value></block></value></block></value><next><block type="ae_layer_for_all" id="5fZfQ%dpWlNQg^U,i/8D"><field name="SELECTION">SELECTED</field><field name="TYPE">TextLayer</field><field name="LAYER_VAR" id="FR_=*$GQ8*6N|bA#h+uj">my layer</field><field name="COMP_CHOICE">COMP</field><value name="COMP"><shadow type="ae_active_comp" id="s4J],eS{f.0U1RXRg!wK"></shadow></value><statement name="LOOP_STATEMENT"><block type="variables_set" id="Lh!,TgNZg_iax%,Qr2c7"><field name="VAR" id="Mc`O;GZcz=DB3GWH:xiq">currentLineLength</field><value name="VALUE"><block type="ae_execute_code" id="0uk?d}k;Y2[-+EQwk-pG" collapsed="true"><mutation items="1" resultType="other"></mutation><field name="FIELD_VAR_NAME_0">text</field><field name="FIELD_VAR_TYPE_0">other</field><field name="RESULT_TYPE">other</field><value name="ADD0"><shadow type="text" id="6EbTVSTwl1elu,C(tB#c"><field name="TEXT">variable value</field></shadow><block type="ae_property_get_attribute" id=":WtPHNa=/GMvHvB2GdH8"><field name="PARAM">VALUE</field><value name="ITEM"><block type="ae_property_path" id="g+xzQG]~wnZp^/%.zp8?"><mutation fullPath="Comp 1::Here is some text/ADBE Text Properties/ADBE Text Document" base="BASE_LAYER"></mutation><field name="PROPERTY_PATH">ADBE Text Properties/ADBE Text Document</field><field name="BASE_DROPDOWN">BASE_LAYER</field><value name="INP_LAYER"><shadow type="text" id="O-SDh%?Q`xIc~f7f}*jV"><field name="TEXT">Comp 1::Here is some text</field></shadow><block type="variables_get" id="^M6?NuVZDhXJ)-?p(Nqf"><field name="VAR" id="FR_=*$GQ8*6N|bA#h+uj">my layer</field></block></value></block></value></block></value><value name="CODE"><shadow type="text_multiline" id="Ny[VT.O5xr?|Mx?rD=~3"><field name="TEXT">function getMaxCharsPerLine(text) {&amp;#10;    // Split on any of the common newline sequences: CRLF, CR, or LF&amp;#10;    var lines = text.split(/\r\n|\r|\n/);&amp;#10;    var maxLength = 0;&amp;#10;&amp;#10;    for (var i = 0; i &lt; lines.length; i++) {&amp;#10;        if (lines[i].length &gt; maxLength) {&amp;#10;            maxLength = lines[i].length;&amp;#10;        }&amp;#10;    }&amp;#10;&amp;#10;    return maxLength;&amp;#10;}&amp;#10;getMaxCharsPerLine(text)</field></shadow></value></block></value><next><block type="ae_property_set_attribute" id="GX+ui[km$J9`l^wVtj~|"><field name="PARAM">EXPRESSION</field><value name="ITEM"><block type="ae_property_path" id="fiB*DBB_z5|)+e_/fb=^"><mutation fullPath="Comp 1::Here is some text/ADBE Text Properties/ADBE Text Document" base="BASE_LAYER"></mutation><field name="PROPERTY_PATH">ADBE Text Properties/ADBE Text Document</field><field name="BASE_DROPDOWN">BASE_LAYER</field><value name="INP_LAYER"><shadow xmlns="" type="text"><field name="TEXT">Comp 1::Here is some text</field></shadow><block type="variables_get" id="l?Tm%4/SPaGnLXe0uNUD"><field name="VAR" id="FR_=*$GQ8*6N|bA#h+uj">my layer</field></block></value></block></value><value name="VALUE"><shadow type="text_multiline" id="1jqFEUK`Hk8}Et(LmTaB"><field name="TEXT">var maxWidth = $1;&amp;#10;var maxHeight = $2;&amp;#10;var measureAtTime = $3;&amp;#10;var rect = sourceRectAtTime(measureAtTime)&amp;#10;var scaleFactor = Math.min(1,maxWidth/rect.width, maxHeight/rect.height);&amp;#10;value * scaleFactor</field></shadow><block type="string_pattern" id="WiLW!Ci32lz^`]FURnfx"><mutation items="4"></mutation><value name="VALUE"><shadow type="text" id="{!nmYQ`._MP^l23hJwk:"><field name="TEXT">Mr. $1 is $2 years old</field></shadow><block type="text_multiline" id="q%4p1y6Ea~56b=|~jCw_" collapsed="true"><field name="TEXT">// define maximum characters per line&amp;#10;var pin1 = thisComp.layer("$1");&amp;#10;var pin2 = thisComp.layer("$2");&amp;#10;var referenceDistance = Math.abs($3);&amp;#10;var referenceCharsPerLine = $4;&amp;#10;var currentDistance = Math.abs(pin1("ADBE Transform Group")("ADBE Position")[0]-pin2("ADBE Transform Group")("ADBE Position")[0])&amp;#10;var maxCharsPerLine = Math.round((currentDistance / referenceDistance) * referenceCharsPerLine);&amp;#10;&amp;#10;maxCharsPerLine = Math.max(1,maxCharsPerLine);&amp;#10;&amp;#10;// read the original text as a simple string&amp;#10;var orig = value;&amp;#10;var origLines = orig.split("\r");&amp;#10;&amp;#10;// helper function: wrap a single line into an array of sub‐lines&amp;#10;function wrapLine(str) {&amp;#10;    // if the line is empty, return a single empty string so the blank line is preserved&amp;#10;    if (str.length === 0) {&amp;#10;        return [""];&amp;#10;    }&amp;#10;    &amp;#10;    var words = str.split(" ");&amp;#10;    var lines = [];&amp;#10;    var curLine = "";&amp;#10;    &amp;#10;    for (var i = 0; i &lt; words.length; i++) {&amp;#10;        var w = words[i];&amp;#10;        &amp;#10;        // if adding this word (plus a space if needed) stays within limit&amp;#10;        if (curLine.length + w.length + (curLine.length &gt; 0 ? 1 : 0) &lt;= maxCharsPerLine) {&amp;#10;            if (curLine.length === 0) {&amp;#10;                curLine = w;&amp;#10;            } else {&amp;#10;                curLine = curLine + " " + w;&amp;#10;            }&amp;#10;        } else {&amp;#10;            // this word would overflow the limit&amp;#10;            if (w.length &gt; maxCharsPerLine) {&amp;#10;                // push any existing curLine first&amp;#10;                if (curLine.length &gt; 0) {&amp;#10;                    lines.push(curLine);&amp;#10;                    curLine = "";&amp;#10;                }&amp;#10;                // split the long word into max‐length chunks&amp;#10;                for (var j = 0; j &lt; w.length; j += maxCharsPerLine) {&amp;#10;                    lines.push(w.substr(j, maxCharsPerLine));&amp;#10;                }&amp;#10;            } else {&amp;#10;                // normal case: push current line, start a new one with this word&amp;#10;                lines.push(curLine);&amp;#10;                curLine = w;&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    &amp;#10;    // push any leftover text in curLine&amp;#10;    if (curLine.length &gt; 0) {&amp;#10;        lines.push(curLine);&amp;#10;    }&amp;#10;    &amp;#10;    return lines;&amp;#10;}&amp;#10;&amp;#10;// process each original line separately, preserving blank lines&amp;#10;var wrappedLines = [];&amp;#10;for (var i = 0; i &lt; origLines.length; i++) {&amp;#10;    var subWrapped = wrapLine(origLines[i]);&amp;#10;    for (var k = 0; k &lt; subWrapped.length; k++) {&amp;#10;        wrappedLines.push(subWrapped[k]);&amp;#10;    }&amp;#10;}&amp;#10;&amp;#10;// join all wrapped lines with "\r" so AE respects them as line breaks&amp;#10;wrappedLines.join("\r");&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;</field></block></value><value name="ADD0"><shadow type="text" id="Uj#!i8e{De$D+}Btb:z0"><field name="TEXT">Miller</field></shadow><block type="ae_layer_get_attribute" id="o@WCgkpQ89*A9N.Cdn9}"><field name="PARAM">NAME</field><value name="ITEM"><block type="variables_get" id="=:I0s;bW;p+tMRa-xaj("><field name="VAR" id=":2vco:~z5#0.,:-((j]A">pin 1</field></block></value></block></value><value name="ADD1"><block type="ae_layer_get_attribute" id="*(lz_L};czbw1rt%+*5%"><field name="PARAM">NAME</field><value name="ITEM"><block type="variables_get" id="Mz0keCP}j%HnOk93Hk+!"><field name="VAR" id="f*kq7aA(^ot0d+-3=p4W">pin 2</field></block></value></block></value><value name="ADD2"><block type="variables_get" id="V`i}2K$)`.2}{J`L.~7p"><field name="VAR" id="HsCpLkkl}Qz^w+c7E4%X">currentDistance</field></block></value><value name="ADD3"><block type="variables_get" id="M4s5Wklf%@5{+P?#abW+"><field name="VAR" id="Mc`O;GZcz=DB3GWH:xiq">currentLineLength</field></block></value></block></value></block></next></block></statement></block></next></block></next></block></next></block></next></block></next></block></next></block></xml>